Загрузка ОС

Процессор переходит на адрес биос и загружает его
биос выбирает носитель информации, на носителе находится загрузчик
загрузчик может загружать сразу ОС или передавать управление следующему загрузчику
второй загрузчик (LILO, GRUB, NTLDR(windows)) загружает ядро ОС и грузит initrd(там конфиги и модули нужные ядру)
далее запускается ядро. Происходит иницилизация устройств, конфигуриров процессоров, памяти и тд
После всех процессов иницилизации ядро запускает процесс init

dmesg - все сообщения ядра
/var/log/dmesg - информация о загрузки
ядро лежит в директории /boot
загрузчик в /boot/grub

Инициализация системы
systemd — это система инициализации и системный диспетчер
unit:
	.service, .mount(точки монтирования), .device(устройства), socket
/usr/lib/systemd/system/ – юниты из установленных пакетов RPM
/etc/systemd/system/ - юниты, созданные системным администратором
Для создания простейшего юнита надо описать три секции: [Unit], [Service], [Install]

[Unit]
Description=Daily apt download activities
After=network.target
Requires=mysql.service
Wants=redis.service

[Service]
Type=oneshot
Environment=RACK_ENV=production

ExecStart=/usr/local/bin/bundl
ExecStop=/usr/local/bin/bundle
ExecReload=/ExecStar
TimeoutSec=300

[Install] в каком уровне запуска должен стартовать сервис
WantedBy=multi-user.target

systemctl  - все запущенные юниты
systemctl --failed - все сломаные юниты
systemctl --type=service фильтр юнитов


lsb_release -a версия ОС

systemd-cgtop top Для cgroups(модуль ядра)
systemctl cat apport-forward@.service
systemctl daemon-reload

RAM
vmstat 
swap - раздел жесткого диска, который исп, если заканчивается RAM
swapon swapoff
mkswap создание раздела подкачки
buff(heap) - место в памяти, зарезервированное под конкретные процессы
cache - использованные недавно файлы 

cat /proc/meminfo
top
shift+m - сортировка по памяти
shift+f - выбрать по чему сортировать. s чтобы сохранить. q Для возврата

жесткий диск
iostat показатели чтения и записи на устройство
/etc -конфигурация системы и ее компонентов
/opt/ - папка для ПО от третьих поставщиков
/var - часто меняющиеся данные
/usr - все установленные пакеты программ, документация, код ядра
разделы жестких дисков
/ - самый большой раздел
/boot - загруз раздел.(примерно 50-100 MB, Хранится ядро) монтируется на отдельный раздел тк старые биосы могу не увидеть эту папку в общем разделе
/home - можно монтировать как сетевую папку
/var - лучше примонтировать ssd, тк частое обращение к памяти
sda1 - sda4 зарезевированы под разделы жесткого диска
логические начинаются с sda5
fdisk - разбиение ЖД 
mkfs.ext4 /dev/sdb5 - создание файловой системы
/etc/fstab - монитрование на постоянно основе

RAID 0 - часть файла записывает на 1 диск, часть на другой
+ файл одновременно записывается на все диски
- потеряются все данные, если один диск сломается
подходит для non critical систем

RAID 1 - один диск дублирует второй
+ возрастает скорость чтения с диска
+ безопасное хранение данных
- объем диска не возрастает, тк они дублируют друг друга

RAID 5 - минимум 3 диска. https://adatahelp.ru/wp-content/uploads/2020/10/raid-5-1024x607.png
+ легко восстановить данные
- из 3х дисков по 1 Тб доступно будет только 2 Тб , тк 3й ушел под служебную инфу(таблицу)

RAID 10 - минимум 4 диска. Диски должны быть в парах. объединяет RAID 0 и RAID 1
+ Быстрая скорость IO
- Покупая 4 Тб, получаем 2. Тк два других - зеркало


iptables -L  посмотреть все правила
есть разделы INPUT FORWARD OUTPUT
для докера сущ отдельный раздел DOCKER
можно налету менять порт sudo iptables -A DOCKER -p tcp  --dport 100 -d 172.17.0.2 -j ACCEPT
-A - добавить правило, -D удалить
-p -порт и его тип
-s source (если не использовать флаг, то anywhere)
-d destination (если не использовать флаг, то anywhere)
-j ACCEPT - разрешить, DROP - запретить, REJECT- отклонить. Пользователи придет сообщение, что пакет отклонен
чтобы сохранилось после  перезагрузки /etc/init.d/iptables save
